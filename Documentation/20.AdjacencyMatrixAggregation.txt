Adjacency Matrix Aggregation

A bucket aggregation returning a form of adjacency matrix. 
The request provides a collection of named filter expressions, similar to the filters aggregation request. 
Each bucket in the response represents a non-empty cell in the matrix of intersecting filters.

Example:
PUT emails/_bulk?refresh
{ "index" : { "_id" : 1 } }
{ "accounts" : ["hillary", "sidney"]}
{ "index" : { "_id" : 2 } }
{ "accounts" : ["hillary", "donald"]}
{ "index" : { "_id" : 3 } }
{ "accounts" : ["vladimir", "donald"]}

Our search:
GET emails/_search
{
  "size": 0,
  "aggs" : {
    "interactions" : {
      "adjacency_matrix" : {
        "filters" : {
          "grpA" : { "terms" : { "accounts" : ["hillary", "sidney"] }},
          "grpB" : { "terms" : { "accounts" : ["donald", "mitt"] }},
          "grpC" : { "terms" : { "accounts" : ["vladimir", "nigel"] }}
        }
      }
    }
  }
}

Out aggs is named "interactions".
Inside it, we have adjacency_matrix type of aggregation.
It has a list of filters with some name.

The response contains buckets with document counts for each filter and combination of filters. Buckets with no matching documents are excluded from the response.
{
  "took": 9,
  "timed_out": false,
  "_shards": ...,
  "hits": ...,
  "aggregations": {
    "interactions": {
      "buckets": [
        {
          "key":"grpA",
          "doc_count": 2
        },
        {
          "key":"grpA&grpB",
          "doc_count": 1
        },
        {
          "key":"grpB",
          "doc_count": 2
        },
        {
          "key":"grpB&grpC",
          "doc_count": 1
        },
        {
          "key":"grpC",
          "doc_count": 1
        }
      ]
    }
  }
}

Parameters:
filters
(Required, object) Filters used to create buckets.

Properties of filters
<filter>
(Required, Query DSL object) Query used to filter documents. The key is the filter name.
At least one filter is required. The total number of filters cannot exceed the indices.query.bool.max_clause_count setting.

separator
(Optional, string) Separator used to concatenate filter names. Defaults to &.


Response Body:
key
(string) Filters for the bucket. If the bucket uses multiple filters, filter names are concatenated using a separator.

document_count
(integer) Number of documents matching the bucketâ€™s filters.

