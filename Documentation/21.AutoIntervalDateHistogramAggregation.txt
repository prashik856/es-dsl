Auto-interval date histogram aggregation

A multi-bucket aggregation similar to the Date histogram except instead of providing an interval to use as the width of each bucket, 
a target number of buckets is provided indicating the number of buckets needed and the interval of the buckets is automatically chosen 
to best achieve that target. The number of buckets returned will always be less than or equal to this target number.

The buckets field is optional, and will default to 10 buckets if not specified.

Requesting a target of 10 buckets.
POST /sales/_search?size=0
{
  "aggs": {
    "sales_over_time": {
      "auto_date_histogram": {
        "field": "date",
        "buckets": 10
      }
    }
  }
}

Keys:
Internally, a date is represented as a 64 bit number representing a timestamp in milliseconds-since-the-epoch. 
These timestamps are returned as the bucket keys. The key_as_string is the same timestamp converted to a formatted date string using 
the format specified with the format parameter:

If no format is specified, then it will use the first date format specified in the field mapping.
POST /sales/_search?size=0
{
  "aggs": {
    "sales_over_time": {
      "auto_date_histogram": {
        "field": "date",
        "buckets": 5,
        "format": "yyyy-MM-dd" 
      }
    }
  }
}

Response:
{
  ...
  "aggregations": {
    "sales_over_time": {
      "buckets": [
        {
          "key_as_string": "2015-01-01",
          "key": 1420070400000,
          "doc_count": 3
        },
        {
          "key_as_string": "2015-02-01",
          "key": 1422748800000,
          "doc_count": 2
        },
        {
          "key_as_string": "2015-03-01",
          "key": 1425168000000,
          "doc_count": 2
        }
      ],
      "interval": "1M"
    }
  }
}


Time Zone:
Date-times are stored in Elasticsearch in UTC. 
By default, all bucketing and rounding is also done in UTC. The time_zone parameter can be used to indicate that bucketing should use a different time zone.

Example:
PUT my-index-00001/log/1?refresh
{
  "date": "2015-10-01T00:30:00Z"
}

PUT my-index-00001/log/2?refresh
{
  "date": "2015-10-01T01:30:00Z"
}

PUT my-index-00001/log/3?refresh
{
  "date": "2015-10-01T02:30:00Z"
}

GET my-index-00001/_search?size=0
{
  "aggs": {
    "by_day": {
      "auto_date_histogram": {
        "field": "date",
        "buckets" : 3
      }
    }
  }
}


Minimum Interval Parameter:
The minimum_interval allows the caller to specify the minimum rounding interval that should be used. 
This can make the collection process more efficient, as the aggregation will not attempt to round at any interval lower than minimum_interval.

The accepted units for minimum_interval are:
year
month
day
hour
minute
second

POST /sales/_search?size=0
{
  "aggs": {
    "sale_date": {
      "auto_date_histogram": {
        "field": "date",
        "buckets": 10,
        "minimum_interval": "minute"
      }
    }
  }
}


Missing Value:
The missing parameter defines how documents that are missing a value should be treated. 
By default they will be ignored but it is also possible to treat them as if they had a value.
POST /sales/_search?size=0
{
  "aggs": {
    "sale_date": {
      "auto_date_histogram": {
        "field": "date",
        "buckets": 10,
        "missing": "2000/01/01" 
      }
    }
  }
}

